{"version":3,"sources":["components/ModalForPhoto/ModalForPhoto.module.css","components/Portfolio/PhotoCard/PhotoCard.module.css","components/ModalForPhoto/ModalForPhoto.jsx","components/Portfolio/PhotoCard/PhotoCard.jsx"],"names":["module","exports","Modal","backdropRef","createRef","handleKeyPress","e","code","props","onClose","handleBackdropClick","current","target","handleTakeValue","onChangeImage","window","addEventListener","this","removeEventListener","index","className","styles","overlay","ref","onClick","role","tabIndex","onKeyPress","modal","style","paddingTop","paddingBottom","src","gallery","alt","bntsNavigation","name","type","disabled","length","Component","PhotoCard","state","isOpen","toggleModal","setState","takeValue","handleChangeValue","console","log","link","value","filter","el","indexOf","openModalScreen","windowWidth","document","documentElement","clientWidth","ModalForPhoto","imageCard"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,QAAU,+BAA+B,MAAQ,6BAA6B,eAAiB,wC,oBCAjHD,EAAOC,QAAU,CAAC,UAAY,+B,+HCiFfC,E,2MA5EbC,YAAcC,sB,EAcdC,eAAiB,SAACC,GACZ,WAAAA,EAAEC,MAEN,EAAKC,MAAMC,W,EAGbC,oBAAsB,SAACJ,GAAO,IACpBK,EAAY,EAAKR,YAAjBQ,QAEJA,GAAWL,EAAEM,SAAWD,GAE5B,EAAKH,MAAMC,W,EAGbI,gBAAkB,SAACD,GACjB,EAAKJ,MAAMM,cAAcF,I,mFAtBzBG,OAAOC,iBAAiB,UAAWC,KAAKZ,kB,6CAIxCU,OAAOG,oBAAoB,UAAWD,KAAKZ,kB,+BAqBnC,IAAD,OACCc,EAAUF,KAAKT,MAAfW,MACR,OACE,yBACEC,UAAWC,IAAOC,QAClBC,IAAKN,KAAKd,YACVqB,QAASP,KAAKP,oBACde,KAAK,SACLC,SAAS,IACTC,WAAY,cAEZ,yBAAKP,UAAWC,IAAOO,OACrB,yBACEC,MAAO,CACLC,WAAY,OACZC,cAAe,QAEjBC,IAAKC,IAAQd,GACbe,IAAI,iBAEN,yBAAKd,UAAWC,IAAOc,gBACrB,4BACEC,KAAK,OACLZ,QAAS,gBAAGZ,EAAH,EAAGA,OAAH,OAAgB,EAAKC,gBAAgBD,IAC9CyB,KAAK,SACLC,UAAWnB,GAJb,UAQA,4BACEiB,KAAK,QACLZ,QAAS,gBAAGZ,EAAH,EAAGA,OAAH,OAAgB,EAAKC,gBAAgBD,IAC9CyB,KAAK,SACLC,SAAUnB,GAASc,IAAQM,OAAS,GAJtC,iB,GA9DQC,a,qDCACC,E,2MACnBC,MAAQ,CAAEC,QAAQ,EAAOxB,MAAO,G,EAEhCyB,YAAc,WACZ,EAAKC,UAAS,SAAAH,GAAK,MAAK,CACtBC,QAASD,EAAMC,OACfxB,MAAO,EAAK2B,iB,EAIhBC,kBAAoB,SAAAnC,GAAW,IACrBO,EAAU,EAAKuB,MAAfvB,MACR6B,QAAQC,IAAIrC,EAAOwB,MACnBY,QAAQC,IAAI9B,GACZ,EAAK0B,SAAS,CACZ1B,MAAuB,UAAhBP,EAAOwB,KAAmBjB,EAAQ,EAAIA,EAAQ,K,EAIzD2B,UAAY,WAAO,IACTI,EAAS,EAAK1C,MAAd0C,KACFC,EAAQlB,IAAQmB,QAAO,SAAAC,GAAE,OAAIH,IAASG,KAE5C,OADoBpB,IAAQqB,QAAQH,EAAM,K,EAI5CI,gBAAkB,WAChB,IAAMC,EAAcC,SAASC,gBAAgBC,YADvB,EAEI,EAAKjB,MAAvBC,EAFc,EAEdA,OAAQxB,EAFM,EAENA,MAEhB,GAAIqC,GAAe,KAAOb,EACxB,OACE,kBAACiB,EAAD,CACEzC,MAAOA,EACPL,cAAe,EAAKiC,kBACpBtC,QAAS,EAAKmC,e,wEAMZ,IACAM,EAASjC,KAAKT,MAAd0C,KAER,OACE,oCACE,yBACE9B,UAAWyC,YACXrC,QAASP,KAAK2B,YACdZ,IAAKkB,EACLhB,IAAI,iBAELjB,KAAKsC,uB,GApDyBf","file":"static/js/7.aac6a069.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ModalForPhoto_overlay__liCeE\",\"modal\":\"ModalForPhoto_modal__2vWql\",\"bntsNavigation\":\"ModalForPhoto_bntsNavigation__1bbdB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageCard\":\"PhotoCard_imageCard__3TVwK\"};","import React, { Component, createRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ModalForPhoto.module.css\";\nimport gallery from \"../Portfolio/gallery/gallery\";\n\nclass Modal extends Component {\n  backdropRef = createRef();\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  handleKeyPress = (e) => {\n    if (e.code !== `Escape`) return;\n\n    this.props.onClose();\n  };\n\n  handleBackdropClick = (e) => {\n    const { current } = this.backdropRef;\n\n    if (current && e.target !== current) return;\n\n    this.props.onClose();\n  };\n\n  handleTakeValue = (target) => {\n    this.props.onChangeImage(target);\n  };\n\n  render() {\n    const { index } = this.props;\n    return (\n      <div\n        className={styles.overlay}\n        ref={this.backdropRef}\n        onClick={this.handleBackdropClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={() => {}}\n      >\n        <div className={styles.modal}>\n          <img\n            style={{\n              paddingTop: \"10px\",\n              paddingBottom: \"10px\",\n            }}\n            src={gallery[index]}\n            alt=\"image_makeup\"\n          />\n          <div className={styles.bntsNavigation}>\n            <button\n              name=\"left\"\n              onClick={({ target }) => this.handleTakeValue(target)}\n              type=\"button\"\n              disabled={!index}\n            >\n              ➤\n            </button>\n            <button\n              name=\"right\"\n              onClick={({ target }) => this.handleTakeValue(target)}\n              type=\"button\"\n              disabled={index >= gallery.length - 1}\n            >\n              ➤\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\r\nimport ModalForPhoto from \"../../ModalForPhoto/ModalForPhoto\";\r\nimport { imageCard } from \"./PhotoCard.module.css\";\r\nimport gallery from \"../gallery/gallery\";\r\n\r\nexport default class PhotoCard extends Component {\r\n  state = { isOpen: false, index: 0 };\r\n\r\n  toggleModal = () => {\r\n    this.setState(state => ({\r\n      isOpen: !state.isOpen,\r\n      index: this.takeValue()\r\n    }));\r\n  };\r\n\r\n  handleChangeValue = target => {\r\n    const { index } = this.state;\r\n    console.log(target.name);\r\n    console.log(index);\r\n    this.setState({\r\n      index: target.name === \"right\" ? index + 1 : index - 1\r\n    });\r\n  };\r\n\r\n  takeValue = () => {\r\n    const { link } = this.props;\r\n    const value = gallery.filter(el => link === el);\r\n    const indexOfItem = gallery.indexOf(value[0]);\r\n    return indexOfItem;\r\n  };\r\n\r\n  openModalScreen = () => {\r\n    const windowWidth = document.documentElement.clientWidth;\r\n    const { isOpen, index } = this.state;\r\n\r\n    if (windowWidth >= 768 && isOpen) {\r\n      return (\r\n        <ModalForPhoto\r\n          index={index}\r\n          onChangeImage={this.handleChangeValue}\r\n          onClose={this.toggleModal}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { link } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <img\r\n          className={imageCard}\r\n          onClick={this.toggleModal}\r\n          src={link}\r\n          alt=\"image_makeup\"\r\n        />\r\n        {this.openModalScreen()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}